{"version":3,"sources":["style.js","components/Form.js","components/Avatar.js","components/Comment.js","components/Feed.js","App.js","index.js"],"names":["style","body","backgroundColor","position","padding","app","width","margin","fontFamily","formBox","emailInput","height","messageInput","display","flexDirection","justifyContent","submitInput","color","textTransform","borderRadius","borderWidth","borderColor","font","feedBox","filterInput","commentList","fontSize","comment","avatar","commentEmail","commentMessage","popup","Form","props","state","email","message","handleChange","bind","handleSubmit","event","this","alert","preventDefault","onCommentSubmit","setState","target","name","value","onSubmit","TextField","placeholder","onChange","variant","fullWidth","InputProps","disableUnderline","multiline","type","Component","Avatar","anchorEl","trimLcEmail","trim","toLowerCase","gravatarUrl","md5","open","Boolean","id","undefined","src","alt","onClick","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","lastCommentDate","Comment","Feed","filter","lastCommentPerEmail","data","forEach","lastDate","moment","isAfter","map","includes","startAdornment","InputAdornment","IconButton","App","getCommentsFromServer","sendCommentsToServer","axios","get","url","then","response","comments","_id","Date","now","format","newComments","concat","post","catch","err","console","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d1c6e0a.chunk.js","sourcesContent":["const style = {\r\n  body: {\r\n    backgroundColor:'#F7F7F7',\r\n    position: 'sticky',\r\n    padding: '10px'\r\n  },\r\n  app: {\r\n    width:'490px',\r\n    margin:'50px',\r\n    fontFamily:'sans-serif',\r\n    backgroundColor:'#FFFFFF'\r\n  },\r\n  formBox: {\r\n    width: '450px',\r\n    padding: '20px',\r\n    backgroundColor:'#EFEFEF'\r\n  },\r\n  emailInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'50px',\r\n    backgroundColor: 'white'\r\n  },\r\n  messageInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'80px',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'top'\r\n  },\r\n  submitInput: {\r\n    width:'100px',\r\n    margin:'5px 350px',\r\n    height:'40px',\r\n    backgroundColor:'#66B2E7',\r\n    color:'#fff',\r\n    textTransform:'uppercase',\r\n    borderRadius:'5px',\r\n    borderWidth: '0px',\r\n    borderColor:'#66B2E7',\r\n    font: 'bold 15px sans-serif'\r\n  },\r\n  feedBox: {\r\n    width: '450px',\r\n    margin: '20px'\r\n  },\r\n  filterInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'50px',\r\n    backgroundColor: 'white'\r\n  },\r\n  commentList: {\r\n    width: '4000px',\r\n    padding: '10px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  comment: {\r\n    width: '400px',\r\n    padding: '5px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  avatar: {\r\n    width: '60px',\r\n    borderRadius:'5px',\r\n  },\r\n  commentEmail: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: 'bold 20px sans-serif'\r\n  },\r\n  commentMessage: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: '20px sans-serif',\r\n    color: '#6D6D6E'\r\n  },\r\n  popup: {\r\n    font: '15px sans-serif',\r\n    padding: '5px'\r\n  }\r\n}\r\n\r\nexport default style;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Form extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      message: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { email, message } = this.state;\r\n    if (!email || !message) {\r\n      alert(`Please enter both an email AND a message`);\r\n      // Don't refresh to keep already-entered text\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    this.props.onCommentSubmit({email: email, message: message});\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.handleSubmit} style = {style.formBox}>\r\n        <TextField\r\n          name = 'email'\r\n          placeholder = 'Email'\r\n          value = {this.state.email}\r\n          onChange = {this.handleChange}\r\n          variant = 'outlined'\r\n          fullWidth = {true}\r\n          InputProps = { {\r\n            disableUnderline : true,\r\n            style: style.emailInput\r\n          } }\r\n        />\r\n        <TextField\r\n          name = 'message'\r\n          placeholder = 'Message'\r\n          value = {this.state.message}\r\n          onChange = {this.handleChange}\r\n          variant = 'outlined'\r\n          fullWidth = {true}\r\n          multiline = {true}\r\n          InputProps = { {\r\n            disableUnderline : true,\r\n            style: style.messageInput\r\n          } }\r\n        />\r\n        <input\r\n          type = 'submit'\r\n          value = 'Submit'\r\n          style = { style.submitInput }\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport md5 from 'md5';\r\nimport style from '../style';\r\nimport {Popover, Typography} from '@material-ui/core/';\r\n\r\nclass Avatar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      anchorEl : null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const trimLcEmail = this.props.email.trim().toLowerCase();\r\n    const emailHash = md5(trimLcEmail);\r\n    const gravatarUrl = 'https://www.gravatar.com/avatar/' + emailHash;\r\n    \r\n    const handleClick = (event) => {\r\n      this.setState( {anchorEl : event.currentTarget} );\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      this.setState( {anchorEl : null} );\r\n    };\r\n  \r\n    const open = Boolean(this.state.anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n  \r\n    return (\r\n      <div>\r\n        <img\r\n          src = {gravatarUrl}\r\n          alt = {'gravatar'}\r\n          style = {style.avatar}\r\n          onClick = {handleClick}\r\n        />\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={this.state.anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n          }}\r\n        >\r\n          <Typography style={style.popup}>\r\n            {this.props.email} <br/>\r\n            Last active: <br/>\r\n            {this.props.lastCommentDate} <br/>\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\nimport Avatar from './Avatar';\r\n\r\nclass Comment extends Component{\r\n  render() {\r\n    return (\r\n      <div style = {style.comment} >\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <Avatar\r\n                style = {style.avatar}\r\n                email = {this.props.email}\r\n                lastCommentDate = {this.props.lastCommentDate}\r\n              />\r\n            </td>\r\n            <div style = {style.commentEmail}>\r\n              {this.props.email}\r\n            </div>\r\n            <div style = {style.commentMessage}>\r\n              {this.props.message}\r\n            </div>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport Comment from './Comment';\r\nimport style from '../style';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport moment from 'moment';\r\n\r\nclass Feed extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { filter: '' }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let lastCommentPerEmail = {}\r\n    this.props.data.forEach(comment => {\r\n      let lastDate = lastCommentPerEmail[comment.email]\r\n      if ( !lastDate || moment(comment.moment).isAfter(moment(lastDate)) )\r\n      {\r\n        lastCommentPerEmail[comment.email] = comment.moment\r\n      }\r\n    })\r\n    let commentList = this.props.data.map(comment => {\r\n      if (comment.email.includes(this.state.filter))\r\n        return (\r\n          <Comment\r\n            email = {comment.email}\r\n            message = {comment.message}\r\n            lastCommentDate = {lastCommentPerEmail[comment.email]}\r\n          /> )\r\n      else\r\n        return <div/>;\r\n    })\r\n    return (\r\n      <div style = {style.feedBox} >\r\n        <TextField\r\n          name = 'filter'\r\n          placeholder = 'Filter'\r\n          value = {this.state.filter}\r\n          onChange = {this.handleChange}\r\n          variant = 'outlined'\r\n          fullWidth = {true}\r\n          InputProps = { {\r\n            startAdornment : (\r\n              <InputAdornment>\r\n                <IconButton>\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            disableUnderline : true,\r\n            style: style.filterInput\r\n          } }\r\n        />\r\n        <div style = {style.commentList} >\r\n          {commentList}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport Feed from './components/Feed';\nimport axios from 'axios';\nimport style from './style';\nimport moment from 'moment';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    this.getCommentsFromServer = this.getCommentsFromServer.bind(this);\n    this.sendCommentsToServer = this.sendCommentsToServer.bind(this);\n  }\n\n  getCommentsFromServer() {\n    axios.get(this.props.url)\n      .then(response => {\n        this.setState( { data: response.data} );\n      });\n  }\n\n  sendCommentsToServer(comment) {\n    let comments = this.state.data;\n    comment._id = Date.now();\n    comment.moment = moment().format(\"YYYY-MM-DD HH:mm:ss\")\n    let newComments = comments.concat([comment]);\n    this.setState({ data: newComments });\n    axios.post(this.props.url, comment)\n      .catch(err => {\n        console.error(err);\n        this.setState({ data: comments });\n      });\n  }\n\n  componentDidMount() {\n    this.getCommentsFromServer();\n  }\n\n  render() {\n    return (\n      <div style = {style.app} >\n        <Form onCommentSubmit = {this.sendCommentsToServer} />\n        <Feed data = {this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport style from './style';\n\nconst commentsUrl = 'http://localhost:5000/api/comments';\n\nReactDOM.render(\n  <div style = {style.body}>\n    <App \n      url = {commentsUrl}\n    />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}