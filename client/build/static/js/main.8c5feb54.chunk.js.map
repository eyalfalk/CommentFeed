{"version":3,"sources":["style.js","components/Form.js","components/Avatar.js","components/Comment.js","components/Feed.js","App.js","index.js"],"names":["style","body","backgroundColor","position","padding","app","width","margin","fontFamily","formBox","emailInput","height","messageInput","display","flexDirection","justifyContent","submitInput","color","textTransform","borderRadius","borderWidth","borderColor","font","feedBox","filterInput","commentList","fontSize","comment","avatar","commentEmail","commentMessage","Form","props","state","email","message","handleChange","bind","handleSubmit","event","this","preventDefault","onCommentSubmit","alert","setState","target","name","value","onSubmit","TextField","placeholder","onChange","variant","fullWidth","InputProps","disableUnderline","multiline","type","Component","Avatar","trimLcEmail","trim","toLowerCase","gravatarUrl","md5","src","alt","Comment","Feed","filter","data","map","includes","startAdornment","InputAdornment","IconButton","App","getCommentsFromServer","sendCommentsToServer","axios","get","url","then","response","comments","_id","Date","now","newComments","concat","post","catch","err","console","error","ReactDOM","render","pollInterval","document","getElementById"],"mappings":"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","file":"static/js/main.8c5feb54.chunk.js","sourcesContent":["const style = {\r\n  body: {\r\n    backgroundColor:'#F7F7F7',\r\n    position: 'sticky',\r\n    padding: '10px'\r\n  },\r\n  app: {\r\n    width:'490px',\r\n    margin:'50px',\r\n    fontFamily:'sans-serif',\r\n    backgroundColor:'#FFFFFF'\r\n  },\r\n  formBox: {\r\n    width: '450px',\r\n    padding: '20px',\r\n    backgroundColor:'#EFEFEF'\r\n  },\r\n  emailInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'50px',\r\n    backgroundColor: 'white'\r\n  },\r\n  messageInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'80px',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'top'\r\n  },\r\n  submitInput: {\r\n    width:'100px',\r\n    margin:'5px 350px',\r\n    height:'40px',\r\n    backgroundColor:'#66B2E7',\r\n    color:'#fff',\r\n    textTransform:'uppercase',\r\n    borderRadius:'5px',\r\n    borderWidth: '0px',\r\n    borderColor:'#66B2E7',\r\n    font: 'bold 15px sans-serif'\r\n  },\r\n  feedBox: {\r\n    width: '450px',\r\n    margin: '20px'\r\n  },\r\n  filterInput: {\r\n    width:'450px',\r\n    margin:'5px 0 5px',\r\n    height:'50px',\r\n    backgroundColor: 'white'\r\n  },\r\n  commentList: {\r\n    width: '4000px',\r\n    padding: '10px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  comment: {\r\n    width: '400px',\r\n    padding: '5px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  avatar: {\r\n    width: '60px',\r\n    borderRadius:'5px',\r\n  },\r\n  commentEmail: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: 'bold 20px sans-serif'\r\n  },\r\n  commentMessage: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: '20px sans-serif',\r\n    color: '#6D6D6E'\r\n  }\r\n}\r\n\r\nexport default style;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Form extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      message: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { email, message } = this.state;\r\n    event.preventDefault();\r\n    if (!email || !message) {\r\n      alert(`Please enter both an email AND a message`);\r\n      return;\r\n    }\r\n    this.props.onCommentSubmit({email: email, message: message});\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.handleSubmit} style = {style.formBox}>\r\n        <TextField\r\n          name = 'email'\r\n          placeholder = 'Email'\r\n          value = {this.state.email}\r\n          onChange = {this.handleChange}\r\n          variant = 'outlined'\r\n          fullWidth = {true}\r\n          InputProps = { {\r\n            disableUnderline : true,\r\n            style: style.emailInput\r\n          } }\r\n        />\r\n        <TextField\r\n          name = 'message'\r\n          placeholder = 'Message'\r\n          value = {this.state.message}\r\n          onChange = {this.handleChange}\r\n          variant = 'outlined'\r\n          fullWidth = {true}\r\n          multiline = {true}\r\n          InputProps = { {\r\n            disableUnderline : true,\r\n            style: style.messageInput\r\n          } }\r\n        />\r\n        <input\r\n          type = 'submit'\r\n          value = 'Submit'\r\n          style = { style.submitInput }\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport md5 from 'md5';\r\nimport style from '../style';\r\n\r\nclass Avatar extends Component {\r\n  render() {\r\n    const trimLcEmail = this.props.email.trim().toLowerCase();\r\n    const emailHash = md5(trimLcEmail);\r\n    const gravatarUrl = \"https://www.gravatar.com/avatar/\" + emailHash;\r\n    return (\r\n      <img\r\n        src = {gravatarUrl}\r\n        alt = {'gravatar'}\r\n        style = {style.avatar}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\nimport Avatar from './Avatar';\r\n\r\nclass Comment extends Component{\r\n  render() {\r\n    return (\r\n      <div style = {style.comment} >\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <Avatar\r\n                style = {style.avatar}\r\n                email = {this.props.email}\r\n              />\r\n            </td>\r\n            <div style = {style.commentEmail}>\r\n              {this.props.email}\r\n            </div>\r\n            <div style = {style.commentMessage}>\r\n              {this.props.message}\r\n            </div>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport Comment from './Comment';\r\nimport style from '../style';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nclass Feed extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { filter: '' }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let commentList = this.props.data.map(comment => {\r\n      if (comment.email.includes(this.state.filter))\r\n        return (\r\n          <Comment\r\n            email = {comment.email}\r\n            message = {comment.message}\r\n            key = {comment['_id']}\r\n          /> )\r\n      else\r\n        return <div/>;\r\n    })\r\n    return (\r\n      <div style = {style.feedBox} >\r\n        <TextField\r\n          name = \"filter\"\r\n          placeholder = \"Filter\"\r\n          value = {this.state.filter}\r\n          onChange = {this.handleChange}\r\n          variant = \"outlined\"\r\n          fullWidth = {true}\r\n          InputProps = { {\r\n            startAdornment : (\r\n              <InputAdornment>\r\n                <IconButton>\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            disableUnderline : true,\r\n            style: style.filterInput\r\n          } }\r\n        />\r\n        <div style = {style.commentList} >\r\n          {commentList}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\nimport Form from \"./components/Form\";\nimport Feed from \"./components/Feed\";\nimport axios from 'axios';\nimport style from './style';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    this.getCommentsFromServer = this.getCommentsFromServer.bind(this);\n    this.sendCommentsToServer = this.sendCommentsToServer.bind(this);\n  }\n\n  getCommentsFromServer() {\n    axios.get(this.props.url)\n      .then(response => {\n        this.setState( { data: response.data} );\n      });\n  }\n\n  sendCommentsToServer(comment) {\n    let comments = this.state.data;\n    comment._id = Date.now();\n    let newComments = comments.concat([comment]);\n    this.setState({ data: newComments });\n    axios.post(this.props.url, comment)\n      .catch(err => {\n        console.error(err);\n        this.setState({ data: comments });\n      });\n  }\n\n  componentDidMount() {\n    this.getCommentsFromServer();\n  }\n\n  render() {\n    return (\n      <div style = {style.app} >\n        <Form onCommentSubmit = {this.sendCommentsToServer} />\n        <Feed data = {this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport style from './style';\n\nconst pollingIntervalInMS = 500;\nconst commentsUrl = 'http://localhost:5000/api/comments';\n\nReactDOM.render(\n  <div style = {style.body}>\n    <App \n      url = {commentsUrl}\n      pollInterval = {pollingIntervalInMS}\n    />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}