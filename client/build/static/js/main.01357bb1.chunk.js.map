{"version":3,"sources":["style.js","components/Form.js","components/Avatar.js","components/Comment.js","components/Feed.js","App.js","index.js"],"names":["style","body","backgroundColor","position","padding","app","width","margin","fontFamily","formBox","emailInput","height","borderStyle","borderColor","messageInput","submitInput","color","textTransform","borderRadius","borderWidth","feedBox","filterInput","commentList","fontSize","comment","avatar","commentEmail","font","commentMessage","Form","props","state","email","message","handleChange","bind","handleSubmit","event","this","alert","preventDefault","onCommentSubmit","setState","target","name","value","onSubmit","type","placeholder","onChange","Component","Avatar","trimLcEmail","trim","toLowerCase","gravatarUrl","md5","src","alt","Comment","Feed","filter","data","map","includes","id","App","getCommentsFromServer","sendCommentsToServer","pollInterval","axios","get","url","then","response","comments","_id","Date","now","newComments","concat","post","catch","err","console","error","setInterval","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01357bb1.chunk.js","sourcesContent":["const style = {\r\n  body: {\r\n    backgroundColor:'#F7F7F7',\r\n    position: 'sticky',\r\n    padding: '10px'\r\n  },\r\n  app: {\r\n    width:'490px',\r\n    margin:'50px',\r\n    fontFamily:'sans-serif',\r\n    backgroundColor:'#FFFFFF'\r\n  },\r\n  formBox: {\r\n    width: '450px',\r\n    padding: '20px',\r\n    backgroundColor:'#EFEFEF'\r\n  },\r\n  emailInput: {\r\n    width:'400px',\r\n    margin:'5px',\r\n    padding:'10px',\r\n    height:'25px',\r\n    borderStyle: 'solid',\r\n    borderColor: '#E5E5E5'\r\n  },\r\n  messageInput: {\r\n    width:'400px',\r\n    margin:'5px',\r\n    padding:'0 10px',\r\n    height:'80px',\r\n    borderStyle: 'solid',\r\n    borderColor: '#E5E5E5'\r\n  },\r\n  submitInput: {\r\n    width:'100px',\r\n    margin:'5px 328px',\r\n    height:'40px',\r\n    backgroundColor:'#66B2E7',\r\n    color:'#fff',\r\n    textTransform:'uppercase',\r\n    borderRadius:'5px',\r\n    borderWidth: '0px',\r\n    borderColor:'#66B2E7'\r\n  },\r\n  feedBox: {\r\n    width: '450px',\r\n    margin: '10px',\r\n    padding: '20px'\r\n  },\r\n  filterInput: {\r\n    width:'400px',\r\n    margin:'5px',\r\n    padding:'10px',\r\n    height:'25px',\r\n    borderStyle: 'solid',\r\n    borderColor: '#E5E5E5'\r\n  },\r\n  commentList: {\r\n    width: '4000px',\r\n    padding: '10px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  comment: {\r\n    width: '400px',\r\n    padding: '5px 0',\r\n    fontSize:'.85rem'\r\n  },\r\n  avatar: {\r\n    width: '60px',\r\n    borderRadius:'5px',\r\n  },\r\n  commentEmail: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: 'bold 20px sans-serif'\r\n  },\r\n  commentMessage: {\r\n    width: '300px',\r\n    margin: '5px',\r\n    font: '20px sans-serif',\r\n    color: '#6D6D6E'\r\n  }  \r\n}\r\n\r\nexport default style;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\n\r\nclass Form extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      message: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { email, message } = this.state;\r\n    if (!email || !message) {\r\n      alert(`Please enter both an email AND a message`);\r\n      // don't refresh the page (to keep any already-entered text):\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    this.props.onCommentSubmit({email: email, message: message});\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit = {this.handleSubmit} style = {style.formBox}>\r\n        <input\r\n          type = 'text'\r\n          name = 'email'\r\n          placeholder = 'Email'\r\n          value = {this.state.email}\r\n          onChange = {this.handleChange}\r\n          style = {style.emailInput}\r\n        />\r\n        <input\r\n          type = 'text'\r\n          name = 'message'\r\n          placeholder = 'Message'\r\n          value = {this.state.message}\r\n          onChange = {this.handleChange}\r\n          style = {style.messageInput}\r\n        />\r\n        <input\r\n          type = 'submit'\r\n          value = 'Submit'\r\n          style = { style.submitInput }\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport md5 from 'md5';\r\nimport style from '../style';\r\n\r\nclass Avatar extends Component {\r\n  render() {\r\n    const trimLcEmail = this.props.email.trim().toLowerCase();\r\n    const emailHash = md5(trimLcEmail);\r\n    const gravatarUrl = \"https://www.gravatar.com/avatar/\" + emailHash;\r\n    return (\r\n      <img\r\n        src = {gravatarUrl}\r\n        alt = {'gravatar'}\r\n        style = {style.avatar}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { Component } from 'react';\r\nimport style from '../style';\r\nimport Avatar from './Avatar';\r\n\r\nclass Comment extends Component{\r\n  render() {\r\n    return (\r\n      <div style = {style.comment} >\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <Avatar\r\n                style = {style.avatar}\r\n                email = {this.props.email}\r\n              />\r\n            </td>\r\n            <div style = {style.commentEmail}>\r\n              {this.props.email}\r\n            </div>\r\n            <div style = {style.commentMessage}>\r\n              {this.props.message}\r\n            </div>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport Comment from './Comment';\r\nimport style from '../style';\r\n\r\nclass Feed extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { filter: '' }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      // Keys will be computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let commentList = this.props.data.map(comment => {\r\n      if (comment.email.includes(this.state.filter))\r\n        return (\r\n          <Comment\r\n            email = {comment.email}\r\n            message = {comment.message}\r\n            key = {comment['_id']}\r\n          /> )\r\n      else\r\n        return <div/>;\r\n    })\r\n    return (\r\n      <div style = {style.feedBox} >\r\n        <form id='search'>\r\n        <input\r\n          type = 'text'\r\n          name = 'filter'\r\n          placeholder = 'Filter'\r\n          value = {this.state.filter}\r\n          onChange = {this.handleChange}\r\n          style = {style.filterInput}\r\n        />\r\n        </form>\r\n        <div style = {style.commentList} >\r\n          {commentList}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\nimport Form from \"./components/Form\";\nimport Feed from \"./components/Feed\";\nimport axios from 'axios';\nimport style from './style';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    this.getCommentsFromServer = this.getCommentsFromServer.bind(this);\n    this.sendCommentsToServer = this.sendCommentsToServer.bind(this);\n    this.pollInterval = null;\n  }\n\n  getCommentsFromServer() {\n    axios.get(this.props.url)\n      .then(response => {\n        this.setState( { data: response.data} );\n      });\n  }\n\n  sendCommentsToServer(comment) {\n    let comments = this.state.data;\n    comment._id = Date.now();\n    let newComments = comments.concat([comment]);\n    this.setState({ data: newComments });\n    axios.post(this.props.url, comment)\n      .catch(err => {\n        console.error(err);\n        this.setState({ data: comments });\n      });\n  }\n\n  componentDidMount() {\n    this.getCommentsFromServer();\n    if(!this.pollInterval) {\n      this.pollInterval = setInterval(this.getCommentsFromServer, this.props.pollInterval);\n    }\n  }\n\n  componentWillUnmount() {\n    this.pollInterval && clearInterval(this.pollInterval);\n    this.pollInterval = null;\n  }\n\n  render() {\n    return (\n      <div style = {style.app} >\n        <Form onCommentSubmit = {this.sendCommentsToServer} />\n        <Feed data = {this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport style from './style';\n\nconst pollingIntervalInMS = 500;\nconst commentsUrl = 'http://localhost:5000/api/comments';\n\nReactDOM.render(\n  <div style = {style.body}>\n    <App \n      url = {commentsUrl}\n      pollInterval = {pollingIntervalInMS}\n    />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}